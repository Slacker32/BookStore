<!DOCTYPE HTML>
<html>
 <head>
  <meta charset="utf-8">
  <title>Запуск уборки мусора</title>
 </head>
 <body>
 
<p><b>Запуск уборки мусора</b></p>
<p>
Как вы уже знаете, CLR запускает уборку мусора, когда обнаруживает, что объем поколения 0 достиг своего порогового значения. Это самая распространенная причина запуска уборки мусора, однако есть и другие:
</p>
<ul>
<li>
	Вызов статического метода Collect объекта System.GC. Код явно указывает, в какой момент должна быть выполнена уборка мусора. Хотя Microsoft решительно не рекомендует использовать этот метод, иногда принудительная уборка мусора в приложении может быть оправдана. Этот способ рассматривается позднее в этой главе.
</li>
<li>
	Windows сообщает о нехватке памяти. CLR использует функции Win32 CreateMemoryResourceNotification и QueryMemoryResourceNotification для контроля состояния памяти системы. Если Windows сообщает о недостаточном объеме свободной памяти, CLR запускает уборку мусора, чтобы избавиться от неиспользуемых объектов и сократить размер рабочего набора процесса.
</li>
<li>
	Выгрузка домена приложения. При выгрузке домена приложения CLR выполняет полную уборку мусора для всех поколений. Домены приложений рассматриваются в главе 22.
</li>
<li>
	Завершение работы CLR. CLR завершает работу при нормальном завершении процесса (по сравнению, например, с внешним завершением работы из Диспетчера задач). Во время заверения CLR считает, что в процессе нет корневых ссылок; объектам предоставляется возможность выполнить очистку, но CLR не пытается дефрагментировать или освобождать память, потому что после завершения всего процесса Windows автоматически освобождает всю его память.
</li>
</ul>

 </body>
</html>